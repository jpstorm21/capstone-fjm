scalar Date

type Query {
  getUsers: [User]
  getAdministrative: [Administrative]
}

type Mutation {
  createUser(input: UserData): User
  editUser(id: ID, input: UserData): User
  changeState(id: ID): User
  deleteUser(id: ID): User
  changePassword(id: ID, password: String): User
}

type User {
  id: ID!
  name: String!
  run: String!
  email: String!
  passwordHash: String!
  passwordSalt: String!
  state: Boolean!
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date!
}

type Administrative {
  user: User!
  campus: Venue!
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date!
}

input UserData {
  run: String!
  name: String!
  email: String!
  password: String
  campus: String!
}
